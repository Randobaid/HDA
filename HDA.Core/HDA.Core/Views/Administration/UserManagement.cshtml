@{
    ViewBag.Title = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container p-4">
    <div class="row">
        <div class="col-md-12">
            <h5>@ViewBag.Title</h5>
            <hr>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card border border-primary " style="min-height:250px;">
                <div class="card-header bg-primary text-white">
                    Users
                    <i class="fa fa-spinner fa-pulse fa-lg" id="userDataTableSpinner" hidden="hidden"></i>
                    <div class="pull-right">
                        <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#addUserModal">
                            <i class="fa fa-plus" aria-hidden="true"></i> Add User
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <table id="userDataTable" class="display table table-sm table-hover" style="width:100%">
                        <thead>
                            <tr>
                                <th>UserName</th>
                                <th>FirstName</th>
                                <th>LastName</th>
                                <th>Email</th>
                                <th>PhoneNumber</th>
                                <th>Roles</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card border border-primary " style="min-height:250px;">
                <div class="card-header bg-primary text-white">
                    Roles
                    <i class="fa fa-spinner fa-pulse fa-lg" id="roleDataTableSpinner" hidden="hidden"></i>
                    <div class="pull-right">
                        <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#addRoleModal">
                            <i class="fa fa-plus" aria-hidden="true"></i> Add Role
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <table id="roleDataTable" class="display table table-sm table-hover" style="width:100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
<div>

<div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="POST">
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="FirstName" class="col-form-label">First Name:</label>
                            <input class="form-control" name="FirstName" required>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="LastName" class="col-form-label">Last Name:</label>
                            <input type="text" class="form-control" name="LastName" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="Email" class="col-form-label">Email:</label>
                            <input type="email" class="form-control" name="Email" required>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="PhoneNumber" class="col-form-label">Phone Number:</label>
                            <input type="text" class="form-control" name="PhoneNumber">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="Password" class="col-form-label">Password:</label>
                            <input type="password" class="form-control" name="Password">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Roles:</h5>
                            <hr>
                            <select multiple name="RoleIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Indicators:</h5>
                            <hr>
                            <select multiple name="IndicatorIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Domains:</h5>
                            <hr>
                            <select multiple name="DomainIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Directorates:</h5>
                            <hr>
                            <select multiple name="DirectorateIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Health Facilities:</h5>
                            <hr>
                            <select multiple name="HealthFacilityIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <span class="p-2"></span>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="POST">
                <input type="hidden" name="Id">
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="FirstName" class="col-form-label">First Name:</label>
                            <input class="form-control" name="FirstName" required>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="LastName" class="col-form-label">Last Name:</label>
                            <input type="text" class="form-control" name="LastName" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="Email" class="col-form-label">Email:</label>
                            <input type="email" class="form-control" name="Email" required>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="PhoneNumber" class="col-form-label">Phone Number:</label>
                            <input type="text" class="form-control" name="PhoneNumber">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="Password" class="col-form-label">Password:</label>
                            <input type="password" class="form-control" name="Password">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Roles:</h5>
                            <hr>
                            <select multiple name="RoleIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Indicators:</h5>
                            <hr>
                            <select multiple name="IndicatorIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Domains:</h5>
                            <hr>
                            <select multiple name="DomainIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Directorates:</h5>
                            <hr>
                            <select multiple name="DirectorateIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <h5>Health Facilities:</h5>
                            <hr>
                            <select multiple name="HealthFacilityIds">
                                <option></option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <span class="p-2"></span>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="addRoleModal" tabindex="-1" role="dialog" aria-labelledby="addRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addRoleModalLabel">Add New Role</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="POST">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Name" class="col-form-label">Name:</label>
                        <input type="text" class="form-control" name="Name" required>
                    </div>
                    <div class="form-group">
                        <label for="Description" class="col-form-label">Description:</label>
                        <textarea class="form-control" name="Description"></textarea>
                    </div>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <span class="p-2"></span>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editRoleModal" tabindex="-1" role="dialog" aria-labelledby="editRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editRoleModalLabel">Edit Role</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="POST">
                <div class="modal-body">
                    <input type="hidden" name="Id">
                    <div class="form-group">
                        <label for="Name" class="col-form-label">Name:</label>
                        <input type="text" class="form-control" name="Name" required>
                    </div>
                    <div class="form-group">
                        <label for="Description" class="col-form-label">Description:</label>
                        <textarea class="form-control" name="Description"></textarea>
                    </div>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <span class="p-2"></span>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var users = [];
        var roles = [];
        var domains = [];
        var directorates = [];
        var healthFacilities = [];
        var indicators = [];
        
        $(document).ready(function () {
            getAllUsers();
            getAllRoles();
            getAllDomains();
            getAllDirectorates();
            getAllHealthFacilities();
            getAllIndicators()
            
            $('#addUserModal form').submit(function() {
                $('#addUserModal').modal('hide');
                Swal.showLoading();
                $.ajax({
                    type: 'POST',
                    url: '../api/users',
                    data: $('#addUserModal form').serialize()
                }).done(function (res) {
                    $('#addUserModal form').trigger("reset");
                    getAllUsers();
                    Swal.fire('Success', 'User added successfully' , 'success');
                }).fail( function(xhr, textStatus, errorThrown) {
                    Swal.fire('Error', xhr.responseJSON.Message , 'error');
                });
                return false;
            });

            $('#editUserModal').on('show.bs.modal', function(e) {
                $(e.currentTarget).find('input[name="Id"]').val($(e.relatedTarget).data('id'));
                $(e.currentTarget).find('input[name="FirstName"]').val($(e.relatedTarget).data('firstname'));
                $(e.currentTarget).find('input[name="LastName"]').val($(e.relatedTarget).data('lastname'));
                $(e.currentTarget).find('input[name="Email"]').val($(e.relatedTarget).data('email'));
                $(e.currentTarget).find('input[name="PhoneNumber"]').val($(e.relatedTarget).data('phonenumber'));
                $(e.currentTarget).find('select[name="RoleIds"]').val($(e.relatedTarget).data('roleids').toString().split(","));
                $(e.currentTarget).find('select[name="RoleIds"]').trigger('change');
                $(e.currentTarget).find('select[name="IndicatorIds"]').val($(e.relatedTarget).data('indicatorids').toString().split(","));
                $(e.currentTarget).find('select[name="IndicatorIds"]').trigger('change');
                $(e.currentTarget).find('select[name="DomainIds"]').val($(e.relatedTarget).data('domainids').toString().split(","));
                $(e.currentTarget).find('select[name="DomainIds"]').trigger('change');
                $(e.currentTarget).find('select[name="DirectorateIds"]').val($(e.relatedTarget).data('directorateids').toString().split(","));
                $(e.currentTarget).find('select[name="DirectorateIds"]').trigger('change');
                $(e.currentTarget).find('select[name="HealthFacilityIds"]').val($(e.relatedTarget).data('healthfacilityids').toString().split(","));
                $(e.currentTarget).find('select[name="HealthFacilityIds"]').trigger('change');
            });

            $('#editUserModal form').submit(function() {
                $('#editUserModal').modal('hide');
                var id = $('#editUserModal form').find('input[name="Id"]').val();
                Swal.showLoading();
                $.ajax({
                    type: 'PUT',
                    url: '../api/users/' + id,
                    data: $('#editUserModal form').serialize()
                }).done(function (res) {
                    $('#editUserModal form').trigger("reset");
                    getAllUsers();
                    Swal.fire('Success', 'User updated successfully' , 'success');
                }).fail( function(xhr, textStatus, errorThrown) {
                    Swal.fire('Error', xhr.responseJSON.Message , 'error');
                });
                return false;
            });

            $('#addRoleModal form').submit(function() {
                $('#addRoleModal').modal('hide');
                Swal.showLoading();
                $.ajax({
                    type: 'POST',
                    url: '../api/roles',
                    data: $('#addRoleModal form').serialize()
                }).done(function (res) {
                    $('#addRoleModal form').trigger("reset");
                    getAllRoles();
                    Swal.fire('Success', 'Role added successfully' , 'success');
                }).fail( function(xhr, textStatus, errorThrown) {
                    Swal.fire('Error', xhr.responseJSON.Message , 'error');
                });
                return false;
            });

            $('#editRoleModal').on('show.bs.modal', function(e) {
                $(e.currentTarget).find('input[name="Id"]').val($(e.relatedTarget).data('id'));
                $(e.currentTarget).find('input[name="Name"]').val($(e.relatedTarget).data('name'));
                $(e.currentTarget).find('textarea[name="Description"]').val($(e.relatedTarget).data('description'));
            });

            $('#editRoleModal form').submit(function() {
                $('#editRoleModal').modal('hide');
                var id = $('#editRoleModal form').find('input[name="Id"]').val();
                Swal.showLoading();
                $.ajax({
                    type: 'PUT',
                    url: '../api/roles/' + id,
                    data: $('#editRoleModal form').serialize()
                }).done(function (res) {
                    $('#editRoleModal form').trigger("reset");
                    getAllRoles();
                    getAllUsers();
                    Swal.fire('Success', 'Role updated successfully' , 'success');
                }).fail( function(xhr, textStatus, errorThrown) {
                    Swal.fire('Error', xhr.responseJSON.Message , 'error');
                });
                return false;
            });
            $('select[name="RoleIds"]').each(function(){
                $(this).select2({ width: '100%' });
            });
            $('select[name="DomainIds"]').each(function(){
                $(this).select2({ width: '100%' });
            });
            $('select[name="DirectorateIds"]').each(function(){
                $(this).select2({ width: '100%' });
            });
            $('select[name="HealthFacilityIds"]').each(function(){
                $(this).select2({ width: '100%' });
            });
            $('select[name="IndicatorIds"]').each(function(){
                $(this).select2({ width: '100%' });
            });
        });

        function getAllUsers() {
            $('#userDataTableSpinner').removeAttr('hidden');
            $.ajax({
                type: 'GET',
                url: '../api/users',
                contentType: "application/json; charset=utf-8"
            }).done(function (res) {
                users = res;
                populateUserDataTables();
            }).fail( function(xhr, textStatus, errorThrown) {
                Swal.fire('Error', xhr.responseJSON.Message , 'error');
            });
        }

        function getAllRoles() {
            $('#roleDataTableSpinner').removeAttr('hidden');
            $.ajax({
                type: 'GET',
                url: '../api/roles',
                contentType: "application/json; charset=utf-8"
            }).done(function (res) {
                roles = res;
                populateRoleDataTables();
                populateRoleIdsSelects();
            }).fail( function(xhr, textStatus, errorThrown) {
                Swal.fire('Error', xhr.responseJSON.Message , 'error');
            });
        }

        function getAllDomains() {
            $.ajax({
                type: 'GET',
                url: '../api/domains',
                contentType: "application/json; charset=utf-8"
            }).done(function (res) {
                domains = res;
                populateDomainIdsSelects();
            }).fail( function(xhr, textStatus, errorThrown) {
                Swal.fire('Error', xhr.responseJSON.Message , 'error');
            });
        }

        function getAllDirectorates() {
            $.ajax({
                type: 'GET',
                url: '../api/directorates',
                contentType: "application/json; charset=utf-8"
            }).done(function (res) {
                directorates = res;
                populateDirectorateIdsSelects();
            }).fail( function(xhr, textStatus, errorThrown) {
                Swal.fire('Error', xhr.responseJSON.Message , 'error');
            });
        }

        function getAllHealthFacilities() {
            $.ajax({
                type: 'GET',
                url: '../api/HealthFacilities/GetHealthFacilities',
                contentType: "application/json; charset=utf-8"
            }).done(function (res) {
                healthFacilities = res;
                populateHealthFacilityIdsSelects();
            }).fail( function(xhr, textStatus, errorThrown) {
                Swal.fire('Error', xhr.responseJSON.Message , 'error');
            });
        }

        function getAllIndicators() {
            $.ajax({
                type: 'GET',
                url: '../api/indicators',
                contentType: "application/json; charset=utf-8"
            }).done(function (res) {
                indicators = res;
                populateIndicatorIdsSelects();
            }).fail( function(xhr, textStatus, errorThrown) {
                Swal.fire('Error', xhr.responseJSON.Message , 'error');
            });
        }

        function populateUserDataTables() {
            var dataTableUsers = users.map(user => {
                var roleNames = [];
                user.Roles.forEach(function (role) {
                    roleNames.push(role.Name);
                });
                user.Roles = roleNames.join();
                return user;
            });
            $('#userDataTable').DataTable({
                destroy: true,
                data: dataTableUsers,
                columns: [
                    { data: 'UserName' },
                    { data: 'FirstName' },
                    { data: 'LastName' },
                    { data: 'Email' },
                    { data: 'PhoneNumber' },
                    { data: 'Roles' },
                    {
                        searchable: false,
                        sortable: false,
                        render: function (data, type, full, meta) {
                            return '<button type="button" class="btn btn-warning btn-sm" data-toggle="modal" data-target="#editUserModal"' + 
                                ' data-id="' + full.Id + '" data-firstname="' + full.FirstName  + '" data-lastname="' + full.LastName  +
                                '" data-email="' + full.Email  + '" data-phonenumber="' + full.PhoneNumber + '" data-roleids="' + full.RoleIds  +
                                '" data-indicatorids="' + full.IndicatorIds  + '" data-domainids="' + full.DomainIds  + '" data-directorateids="' +
                                full.DirectorateIds + '" data-healthfacilityids="' + full.HealthFacilityIds + '">' +
                                '<i class="fa fa-edit" aria-hidden="true"></i> Edit</button>&nbsp;&nbsp;' +
                                '<button type="button" class="btn btn-danger btn-sm" onclick="deleteUser(\''+ full.Id +'\')">' +
                                '<i class="fa fa-trash" aria-hidden="true"></i> Delete</button>';
                        }
                    }
                ]
            });
            $('#userDataTableSpinner').attr('hidden', true);
        }

        function populateRoleDataTables() {
            $('#roleDataTable').DataTable({
                destroy: true,
                data: roles,
                columns: [
                    { data: 'Name' },
                    { data: 'Description' },
                    {
                        searchable: false,
                        sortable: false,
                        render: function (data, type, full, meta) {
                            return '<button type="button" class="btn btn-warning btn-sm" data-toggle="modal" data-target="#editRoleModal"' + 
                                ' data-id="' + full.Id + '" data-name="' + full.Name + '" data-description="' + full.Description + '">' +
                                '<i class="fa fa-edit" aria-hidden="true"></i> Edit</button>&nbsp;&nbsp;' +
                                '<button type="button" class="btn btn-danger btn-sm" onclick="deleteRole(\''+ full.Id +'\')">' +
                                '<i class="fa fa-trash" aria-hidden="true"></i> Delete</button>';
                        }
                    }
                ]
            });
            $('#roleDataTableSpinner').attr('hidden', true);
        }

        function populateRoleIdsSelects() {
            $('select[name="RoleIds"]').each(function(){
                var element = $(this);
                element.empty();
                roles.forEach(function (role) {
                    element.append($("<option></option>")
                        .attr("value", role.Id)
                        .text(role.Name));
                });
            });
        }

        function populateDomainIdsSelects() {
            $('select[name="DomainIds"]').each(function(){
                var element = $(this);
                element.empty();
                domains.forEach(function (domain) {
                    element.append($("<option></option>")
                        .attr("value", domain.DomainID)
                        .text(domain.DomainCode));
                });
            });
        }

        function populateDirectorateIdsSelects() {
            $('select[name="DirectorateIds"]').each(function(){
                var element = $(this);
                element.empty();
                directorates.forEach(function (directorate) {
                    element.append($("<option></option>")
                        .attr("value", directorate.DirectorateID)
                        .text(directorate.DirectorateNameEn));
                });
            });
        }
        
        function populateHealthFacilityIdsSelects() {
            $('select[name="HealthFacilityIds"]').each(function(){
                var element = $(this);
                element.empty();
                healthFacilities.forEach(function (healthFacility) {
                    element.append($("<option></option>")
                        .attr("value", healthFacility.ID)
                        .text(healthFacility.HealthFacilityName));
                });
            });
        }

        function populateIndicatorIdsSelects() {
            $('select[name="IndicatorIds"]').each(function(){
                var element = $(this);
                element.empty();
                indicators.forEach(function (indicator) {
                    element.append($("<option></option>")
                        .attr("value", indicator.IndicatorID)
                        .text(indicator.IndicatorNameEn));
                });
            });
        }

        function deleteUser(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to undo this action",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    Swal.showLoading();
                    var url = '../api/users/'+ id;
                    $.ajax({
                        type: 'DELETE',
                        url: url,
                        contentType: "application/json; charset=utf-8"
                    }).done(function (res) {
                        getAllUsers();
                        Swal.fire('Success', 'User deleted successfully' , 'success');
                    }).fail( function(xhr, textStatus, errorThrown) {
                        Swal.fire('Error', xhr.responseJSON.Message , 'error');
                    });
                }
            });
        }

        function deleteRole(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to undo this action",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    Swal.showLoading();
                    var url = '../api/roles/'+ id;
                    $.ajax({
                        type: 'DELETE',
                        url: url,
                        contentType: "application/json; charset=utf-8"
                    }).done(function (res) {
                        getAllUsers();
                        getAllRoles();
                        Swal.fire('Success', 'Role deleted successfully' , 'success');
                    }).fail( function(xhr, textStatus, errorThrown) {
                        Swal.fire('Error', xhr.responseJSON.Message , 'error');
                    });
                }
            });
        }
    </script>
}