
@{
    ViewBag.Title = "OutpatientPrescriptions";
}
<div class="col-md-12">
    <br />
    <div class="row">
        <div class="col-md-3">
            <div class="card text-center border border-primary">
                <div class="card-header bg-light text-dark" data-toggle="collapse" data-target="#filtersBody">
                    <i class="fa fa-filter fa-lg" aria-hidden="true"></i><b> Filters</b>
                    <i class="fa fa-spinner fa-pulse fa-lg" hidden id="ajaxProgress"></i>
                </div>
                <div class="card-body text-left" id="filtersBody">
                    <div class="row">

                        <div class="form-group col-md-12">
                            <div class="dropdown">
                                <select id="hospital_types" multiple="multiple">
                                    <option value="1">Hospitals</option>
                                    <option value="2">Comprehensive Centers</option>
                                    <option value="3">Specialized Medical Centers</option>
                                    <option value="4">Peripheral Centers</option>
                                    <option value="5">Primary Centers</option>
                                    <option value="6">Educational Hospitals</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="row">
                                <div class="col-md-9 col-sm-12">
                                    <input type="text" class="form-control" id="TextHospital" placeholder="Select Facility.." disabled="disabled" />
                                </div>
                                <div class="col-md-3 col-sm-12">
                                    <div class="form-check">
                                        <input class="form-check-input " type="checkbox" checked="checked" value="" id="allHospitals">
                                        <label class="form-check-label" for="allHospitals">All</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <table id="selectedFacilitiesTable" class="table table-sm table-hover">

                                <tbody></tbody>
                            </table>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="row">
                                <div class="col-md-9 col-sm-12">
                                    <input type="text" class="form-control" id="TextPharmacy" placeholder="Select Pharmacy.." disabled="disabled" />
                                </div>
                                <div class="col-md-3 col-sm-12">
                                    <div class="form-check">
                                        <input class="form-check-input " type="checkbox" checked="checked" value="" id="allPharmacies" disabled>
                                        <label class="form-check-label" for="allPharmacies">
                                            All
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="reportrange" class="col-form-label">Reporting Period</label>
                            <div id="reportrange" class="rounded" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                                <i class="fa fa-calendar"></i>&nbsp;
                                <span></span> <i class="fa fa-caret-down"></i>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="row">
                                <div class="col-md-9">
                                    <input type="text" placeholder="Select Drug Class.." class="form-control" id="TextDrugClass" disabled="disabled" />
                                </div>
                                <div class="col-md-3">
                                    <div class="form-check">
                                        <input class="form-check-input " type="checkbox" checked="checked" value="" id="allDrugClasses">
                                        <label class="form-check-label" for="allDrugClasses">
                                            All
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="row">
                                <div class="col-md-9">
                                    <input type="text" placeholder="Select Drug .." class="form-control smallinput" id="TextDrug" disabled="disabled" />
                                </div>
                                <div class="col-md-3">
                                    <div class="form-check">
                                        <input class="form-check-input " type="checkbox" checked="checked" value="" id="allDrugs" disabled>
                                        <label class="form-check-label" for="allDrugs">
                                            All
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <button class="btn btn-primary btn-block" onclick="refreshCharts();"><i class="fa fa-refresh"></i>&nbsp;Load Charts</button>
                        </div>
                    </div>
                </div>
            </div>

            <br />
            <div class="card text-center border border-primary">
                <div class="card-header bg-light text-dark">
                    <i class="fa fa-bullseye fa-lg" aria-hidden="true"></i><b> Targets</b>
                </div>

            </div>

            <br />
            <div class="card text-center border border-primary">
                <div class="card-header bg-light text-dark">
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true"></i><b> Additional Information</b>
                </div>

            </div>

        </div>
        <div class="col-md-9">
            <div class="row">
                <div class="col-md-12">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="pharmacymonitoring-tab" href="#PharmacyMonitoringTab" data-toggle="tab" role="tab">Pharmacy Trends</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="institutiontrends-tab" href="#InstitutionTrendsTab" data-toggle="tab" role="tab">Institution Trends</a>
                        </li>

                    </ul>

                    <div class="tab-content" id="pharmacymonitoring-tabcontent">
                        <br />

                        <div id="PharmacyMonitoringTab" class="tab-pane fade show active" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card border border-primary bg-light" id="prescriptionsPerPharmacy">
                                        <div class="card-header bg-primary text-white">
                                            Prescriptions Per Pharmacy
                                        </div>
                                        <div class="card-body">
                                            <div class="col-md-12">
                                                <div class="facilityPrompt"><i class="fa fa-info-circle fa-lg"></i> <i class="text-black-50">Select a Facility to View this Chart</i></div>
                                                <div id="prescriptionsPerPharmacyChart"></div>
                                            </div>
                                            <br />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card border border-primary bg-light" id="quantitiesPerPharmacy">
                                        <div class="card-header bg-primary text-white">
                                            Dispensed Quantities Per Pharmacy
                                        </div>
                                        <div class="card-body">
                                            <div class="col-md-12">
                                                <div id="drugPrompt"><i class="fa fa-info-circle fa-lg"></i> <i class="text-black-50">Select a Drug to View this Chart</i></div>
                                                <div id="quantitiesPerPharmacyChart"></div>
                                            </div>
                                            <br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="InstitutionTrendsTab" class="tab-pane fade" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card border border-primary bg-light" id="prescriptionsPerInstitution">
                                        <div class="card-header bg-primary text-white">
                                            Prescriptions Trends
                                        </div>
                                        <div class="card-body">
                                            <div class="col-md-12">
                                                <div class="facilityPrompt"><i class="fa fa-info-circle fa-lg"></i> <i class="text-black-50">Select a Facility to View this Chart</i></div>
                                                <div id="prescriptionsPerInstitutionChart"></div>
                                            </div>
                                            <br />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card border border-primary bg-light" id="prescriptionsPerProvider">
                                        <div class="card-header bg-primary text-white">
                                            Prescriptions Per Institution
                                        </div>
                                        <div class="card-body">
                                            <div class="col-md-12">
                                                <div class="facilityPrompt"><i class="fa fa-info-circle fa-lg"></i> <i class="text-black-50">Select a Facility to View this Chart</i></div>
                                                <div id="prescriptionsPerProviderChart"></div>
                                            </div>
                                            <br />
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <br />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="card-deck col-md-12">
                    <div class="card bg-purple text-white text-center">
                        <div class="card-body">
                            <h2 id="numHospitalsCard">0</h2>
                        </div>
                        <div class="card-footer">Hospitals</div>
                    </div>
                    <div class="card bg-purple text-white text-center">
                        <div class="card-body">
                            <h2 id="numPharmaciesCard">0</h2>
                        </div>
                        <div class="card-footer">Pharmacies</div>
                    </div>
                    <div class="card bg-purple text-white text-center">
                        <div class="card-body">
                            <h2 id="numDrugClassesCard">0</h2>
                        </div>
                        <div class="card-footer">Drug Classes</div>
                    </div>
                    <div class="card bg-purple text-white text-center">
                        <div class="card-body">
                            <h2 id="numDrugsCard">0</h2>
                        </div>
                        <div class="card-footer">Drugs</div>
                    </div>
                    <div class="card bg-purple text-white text-center">
                        <div class="card-body">
                            <h2 id="numProvidersCard">0</h2>
                        </div>
                        <div class="card-footer">Providers</div>
                    </div>
                    <div class="card bg-light text-dark text-center" id="totalQuantityPerDrugCard">
                        <div class="card-body">
                            <h2 id="numTotalQuantityPerDrugCard">-</h2>
                        </div>
                        <div class="card-footer">Total Dispensed Quantity</div>
                    </div>
                    <div class="card bg-light text-dark text-center" id="averageQuantityPerDrugCard">
                        <div class="card-body">
                            <h2 id="numAverageQuantityPerDrugCard">-</h2>
                        </div>
                        <div class="card-footer">Average Quantity per Prescription</div>
                    </div>
                </div>
            </div>

        </div>
    </div>


</div>


@section Scripts {
    <script type="text/javascript">
        var fInput;
        var facilityAws;
        var pharmacyTextBox;
        var pharmacyAws;

        var facilityId = 0;
        var providerId = 0;
        var pharmacyId = 0;
        var drugClassTextBox;
        var drugClassAws;
        var drugClassId = 0;

        var drugTextBox;
        var drugAws;
        var drugId = 0;
        var pharmacyNames = [];
        var numberOfPharmacies = 0;

        var pChart;
        var presPerPharmacyChart;

        var selectedHospitalTypes = [];
        var selectedHospitalTypesJson;
        var quantitiesPerPharmacyChart;
        var selectedHospitals = [];

        $(function () {
            Highcharts.setOptions({
                chart: {
                    backgroundColor: '#f8f9fa',
                    plotBackgroundColor: '#ffffff',
                    spacingBottom: 5,
                    spacingTop: 5,
                    spacingLeft: 5,
                    spacingRight: 5,
                }
            });
        });

        $(document).ajaxStart(function () {
            $('#ajaxProgress').removeAttr('hidden');
        });

        $(document).ajaxStop(function () {
            $('#ajaxProgress').attr('hidden', true);
        });

        $(document).ready(function () {
            toastr.options = {
                'positionClass': 'toast-bottom-left',
            }


            $('#hospital_types').multiselect({
                enableHTML: true,
                buttonWidth: '100%',
                includeSelectAllOption: true,
                allSelectedText: 'All Selected',
                onSelectAll: function () {
                    updateSelectedHospitalTypes();
                },
                buttonClass: 'btn btn-primary btn-block',
                buttonText: function (options, select) {
                    if (options.length === 0) {
                        return '<i class="fa fa-hospital-o fa-lg" aria-hidden="true"></i> Select Hospital Type';
                    }
                    else if (options.length > 3) {
                        return options.length + ' selected';
                    }
                    else {
                        var labels = [];
                        options.each(function () {
                            if ($(this).attr('label') !== undefined) {
                                labels.push($(this).attr('label'));
                            }
                            else {
                                labels.push($(this).html());
                            }
                        });
                        return labels.join(', ') + '';
                    }
                },
                onChange: function (element, checked) {
                    updateSelectedHospitalTypes();
                },
                onDropdownHidden: function (event) {
                    /*selectedHospitalTypes = [];
                    $.each($('#hospital_types option:selected'), function () {
                        var a = new Object();
                        a.HealthFacilityTypeId = $(this).val();
                        selectedHospitalTypes.push(a);
                    });

                    selectedHospitalTypesJson = JSON.stringify(selectedHospitalTypes);
                    GetFacilityList(fInput, facilityAws, selectedHospitalTypesJson);
                    //refreshCharts();*/
                }
            });

            fInput = document.getElementById("TextHospital");
            facilityAws = new Awesomplete(fInput, { minChars: 0 });

            pharmacyTextBox = document.getElementById("TextPharmacy");
            pharmacyAws = new Awesomplete(pharmacyTextBox, { minChars: 2 });

            drugClassTextBox = document.getElementById("TextDrugClass");
            drugClassAws = new Awesomplete(drugClassTextBox, { minChars: 2 });

            GetDrugClasses();

            drugTextBox = document.getElementById("TextDrug");
            drugAws = new Awesomplete(drugTextBox, { minChars: 0 });
        });


        $("#allHospitals").change(function () {
            if (this.checked) {
                $('#TextHospital').attr('disabled', true);
                $('#TextHospital').val('');
                facilityId = 0;
                //refreshCharts();
                $('#allPharmacies').attr('disabled', true);
                selectedHospitals = [];
                $('#selectedFacilitiesTable').empty();
                $('#selectedFacilitiesTable').append('<tbody></tbody>');
            }
            else {
                $('#TextHospital').removeAttr('disabled');
            }
        });

        $("#allPharmacies").change(function () {
            if (this.checked) {
                $('#TextPharmacy').attr('disabled', true);
                $('#TextPharmacy').val('');
                pharmacyId = 0;
                //refreshCharts();
            }
            else {
                $('#TextPharmacy').removeAttr('disabled');
            }
        });

        $("#allDrugClasses").change(function () {
            if (this.checked) {
                $('#TextDrugClass').attr('disabled', true);
                $('#TextDrugClass').val('');
                drugClassId = 0;
                drugId = 0;
                $('#TextDrug').val('');
                $('#TextDrug').attr('disabled', true);
                $('#allDrugs').prop('checked', true);
                $('#allDrugs').attr('disabled', true);

                //refreshCharts();

            }
            else {
                $('#TextDrugClass').removeAttr('disabled');
            }
        });

        $("#allDrugs").change(function () {
            if (this.checked) {
                $('#TextDrug').attr('disabled', true);
                $('#TextDrug').val('');
                drugId = 0;
                //refreshCharts();
            }
            else {
                $('#TextDrug').removeAttr('disabled');
                
            }
        });
    $('#TextDrug').focus(function () {
        drugAws.evaluate();
            drugAws.open();
    });
    $('#TextHospital').focus(function () {
        if (facilityAws._list.length < 10) {
            facilityAws.evaluate();
        }
    });

        function GetFacilityList(fInput, aws1, selectedFacilityTypes) {
            fInput.addEventListener('awesomplete-selectcomplete', SelectFacility);
            $.ajax({
                url: '../api/HealthFacilities/PostHealthFacilitiesByType',
                type: 'POST',
                data: selectedFacilityTypes,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var serverData = data;
                    var hfList = [];
                    for (var i = 0; i < serverData.length; i++) {
                        hfList.push({ label: serverData[i]['HealthFacilityName'], value: serverData[i]['ID'] + '~' + serverData[i]['HealthFacilityName'] });
                    }
                    aws1.list = hfList;
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }

        $(function () {
            var start = moment().startOf('year');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                startDate = start.format('YYYY-MM-DD');
                endDate = end.format('YYYY-MM-DD');
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                alwaysShowCalendars: true,
                ranges: {
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    'Year to Date': [moment().startOf('year'), moment()],
                    'Last Year': [moment().startOf('year').subtract(1, 'year'), moment().endOf('year').subtract(1, 'year')]
                }
            }, cb);
            cb(start, end);
        });

    function updateSelectedHospitalTypes() {
        
        selectedHospitalTypes = [];
        $.each($('#hospital_types option:selected'), function () {
            var a = new Object();
            a.HealthFacilityTypeId = $(this).val();
            selectedHospitalTypes.push(a);
        });

        selectedHospitalTypesJson = JSON.stringify(selectedHospitalTypes);
        GetFacilityList(fInput, facilityAws, selectedHospitalTypesJson);
        
    }

    function SelectFacility() {
            var result = this.value.split("~");
            var healthFacilityName = result[1];
            var healthFacilityId = result[0];
            selectedHospitals.push(healthFacilityId);
            this.value = "";

            $('#selectedFacilitiesTable > tbody:last-child').append
                ('<tr><td class="font-weight-bold">' + healthFacilityName + '</td><td><a href="#" onclick="updateTable(this,' + healthFacilityId + ');"><i class="fa fa-trash" ></i></a></td></tr>');


            $('#allPharmacies').removeAttr('disabled');
            GetPharmacies(selectedHospitals);
        }

        function updateTable(row, removeId) {
            $(row).parent().parent().remove();
            selectedHospitals.splice($.inArray(removeId, selectedHospitals), 1);
            var t = document.getElementById("selectedFacilitiesTable");
            if (t.rows.length == 0) {
                $("#allHospitals").prop('checked', true);
                $("#allHospitals").change();
            }
        }

        function GetPharmacies(selectedHospitals) {
            pharmacyTextBox.addEventListener('awesomplete-selectcomplete', SelectPharmacy);
            var payload = JSON.stringify(selectedHospitals);
            $.ajax({
                url: '../api/HealthFacilities/GetPharmacies',
                type: 'POST',
                data: payload,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var serverData = data;
                    var pharmacyList = [];
                    for (var i = 0; i < serverData.length; i++) {
                        pharmacyList.push({ label: serverData[i]['PharmacyName'], value: serverData[i]['ID'] + '~' + serverData[i]['PharmacyName'] });
                    }
                    pharmacyAws.list = pharmacyList;
                },
                error: function (data) {
                    console.log(data.d);
                }
            });
        }

        function SelectPharmacy() {
            var result = this.value.split("~");
            this.value = result[1];
            pharmacyId = result[0];
        }

        function GetDrugClasses() {
            drugClassTextBox.addEventListener('awesomplete-selectcomplete', SelectDrugClass);
            $.ajax({
                url: '../api/HealthFacilities/GetDrugClasses',
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var serverData = data;
                    var drugClassList = [];
                    for (var i = 0; i < serverData.length; i++) {
                        drugClassList.push({ label: serverData[i]['DrugClassName'], value: serverData[i]['ID'] + '~' + serverData[i]['DrugClassName'] });
                    }
                    drugClassAws.list = drugClassList;
                },
                error: function (data) {
                    console.log(data.d);
                }
            });
        }

        function SelectDrugClass() {
            var result = this.value.split("~");
            this.value = result[1];
            drugClassId = result[0];
            GetDrugs(drugClassId);
            //refreshCharts();
            $('#allDrugs').removeAttr('disabled');
            
        }

        function GetDrugs(selectedDrugClassId) {
            drugTextBox.addEventListener('awesomplete-selectcomplete', SelectDrug);
            $.ajax({
                url: '../api/HealthFacilities/GetDrugs/' + selectedDrugClassId,
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var serverData = data;
                    var drugList = [];
                    for (var i = 0; i < serverData.length; i++) {
                        drugList.push({ label: serverData[i]['DrugName'], value: serverData[i]['ID'] + '~' + serverData[i]['DrugName'] });
                    }
                    drugAws.list = drugList;
                    
                },
                error: function (data) {
                    console.log(data.d);
                }
            });
        }

        function SelectDrug() {
            var result = this.value.split("~");
            this.value = result[1];
            drugId = result[0];
            //refreshCharts();
        }

    function GetPrescriptionsPerInstitution() {
        
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: payloadJson,
                url: '../api/OutPatientPrescriptions/GetPrescriptionsPerInstitution/?HealthFacilityID=' + facilityId
                    + '&ProviderID=' + providerId
                    + '&PharmacyID=' + pharmacyId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate
                    + '&DrugClassId=' + drugClassId
                    + '&DrugId=' + drugId + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                if (selectedHospitals.length == 0 || selectedHospitals.length > 5) {
                    var series1 = [];
                    for (var i = 0; i < json.length; i++) {
                        series1.push([Date.UTC(json[i]['Year'], json[i]['MonthId'] - 1), json[i]['Total']]);
                    }
                    pChart.addSeries({
                        name: 'All Selected Facilities',
                        data: series1
                    });
                }
                else {
                    for (var i = 0; i < selectedHospitals.length; i++) {
                        var series1 = [];
                        var healthFacilityName = '';
                        for (var j = 0; j < json.length; j++) {
                            if (json[j]['HealthFacilityID'] == selectedHospitals[i]) {
                                series1.push([Date.UTC(json[j]['Year'], json[j]['MonthId'] - 1), json[j]['Total']]);
                                healthFacilityName = json[j]['HealthFacilityName'];
                            }
                        }
                        pChart.addSeries({
                                name: healthFacilityName,
                                data: series1
                            });
                    }
                }
            });
        }

        function prescriptionsTrendChart() {
            pChart = new Highcharts.chart('prescriptionsPerInstitutionChart', {
                chart: {
                    type: 'line',
                    events: {
                        load: GetPrescriptionsPerInstitution
                    }
                },
                title: { text: '' },

                subtitle: { text: '' },
                xAxis: { type: 'datetime' },
                yAxis: {
                    title: { text: 'Number of Prescriptions' }
                },
                credits: false
            });
        }

        function prescriptionsPerPharmacyChart() {
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);


            pharmacyNames = [];
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: payloadJson,
                url: '../api/OutPatientPrescriptions/GetPrescriptionsPerPharmacy/?HealthFacilityID=' + facilityId
                    + '&ProviderID=' + providerId
                    + '&PharmacyID=' + pharmacyId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate
                    + '&DrugClassId=' + drugClassId
                    + '&DrugId=' + drugId + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                var pharmacyPrescriptions = [];
                var pharmacyQuantities = [];
                var pharmacyRefills = [];
                for (var i = 0; i < json.length; i++) {
                    pharmacyNames.push(json[i]['PharmacyName']);
                    pharmacyPrescriptions.push(json[i]['TotalPrescriptions']);
                    pharmacyQuantities.push(json[i]['TotalQuantity']);
                    pharmacyRefills.push(json[i]['TotalRefillQuantity']);
                }
                var xAxisMax = pharmacyNames.length - 1;
                if (pharmacyNames.length > 10) {
                    xAxisMax = 10;
                }
                presPerPharmacyChart = new Highcharts.chart('prescriptionsPerPharmacyChart', {
                    chart: {
                        //type: 'column',
                    },
                    title: { text: '' },
                    subtitle: { text: '' },
                    xAxis: {
                        categories: pharmacyNames,
                        min: 0,
                        max: xAxisMax
                    },
                    scrollbar: {
                        enabled: true,
                        barBackgroundColor: 'gray',
                        barBorderRadius: 7,
                        barBorderWidth: 0,
                        buttonBackgroundColor: 'gray',
                        buttonBorderWidth: 0,
                        buttonArrowColor: 'yellow',
                        buttonBorderRadius: 7,
                        rifleColor: 'yellow',
                        trackBackgroundColor: 'white',
                        trackBorderWidth: 1,
                        trackBorderColor: 'silver',
                        trackBorderRadius: 7
                    },
                    yAxis: [{
                        title: { text: 'Number of Prescriptions' }
                    }
                    ],

                    series: [{
                        name: 'Prescriptions per Pharmacy',
                        data: pharmacyPrescriptions,
                        yAxis: 0,
                        type: 'column',
                    }],
                    credits: false
                });
                if (drugId > 0) {
                    $('#drugPrompt').attr('hidden', true);
                    quantitiesPerPharmacyChart = new Highcharts.chart('quantitiesPerPharmacyChart', {
                        chart: { type: 'column' },
                        title: { text: '' },
                        subtitle: { text: '' },
                        xAxis: {
                            categories: pharmacyNames,
                            min: 0,
                            max: xAxisMax
                        },
                        scrollbar: {
                            enabled: true,
                            barBackgroundColor: 'gray',
                            barBorderRadius: 7,
                            barBorderWidth: 0,
                            buttonBackgroundColor: 'gray',
                            buttonBorderWidth: 0,
                            buttonArrowColor: 'yellow',
                            buttonBorderRadius: 7,
                            rifleColor: 'yellow',
                            trackBackgroundColor: 'white',
                            trackBorderWidth: 1,
                            trackBorderColor: 'silver',
                            trackBorderRadius: 7
                        },
                        yAxis: [
                            {
                                title: { text: 'Quantity' },
                            }],
                        series: [
                            { name: 'Prescription Quantities per Pharmacy', data: pharmacyQuantities },
                            { name: 'Refill Quantities per Pharmacy', data: pharmacyRefills }

                        ],
                        plotOptions: { series: { stacking: 'normal' } },
                        credits: false
                    });

                }
                else {
                    if (quantitiesPerPharmacyChart != undefined) {
                        quantitiesPerPharmacyChart.destroy();
                    }
                    $('#drugPrompt').attr('hidden', false);
                }
            });


        }

        function GetSummaryCounts() {
            $('#numAverageQuantityPerDrugCard').text('-');
            $('#numTotalQuantityPerDrugCard').text('-');
            $('#averageQuantityPerDrugCard').removeClass('bg-purple text-white').addClass('bg-light text-dark');

            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);

            $.ajax({
                type: 'POST',
                data: payloadJson,
                dataType: 'json',
                url: '../api/OutPatientPrescriptions/GetSummaryCounts/?HealthFacilityID=' + facilityId
                    + '&ProviderID=' + providerId
                    + '&PharmacyID=' + pharmacyId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate
                    + '&DrugClassId=' + drugClassId
                    + '&DrugId=' + drugId + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                $('#numHospitalsCard').text(json[0]['TotalFacilities']);
                $('#numPharmaciesCard').text(json[0]['TotalPharmacies']);
                $('#numProvidersCard').text(json[0]['TotalProviders']);
                $('#numDrugClassesCard').text(json[0]['TotalDrugClasses']);
                $('#numDrugsCard').text(json[0]['TotalDrugs']);
                var averageQuantity = parseInt(json[0]['AverageQuantityPerPrescription']);
                var totalQuantity = parseInt(json[0]['TotalQuantityPerDrug']);
                if (drugId > 0 && averageQuantity > 0) {
                    $('#numAverageQuantityPerDrugCard').text(averageQuantity);
                    var normalAmountToOrder = parseInt(json[0]['NormalAmountToOrder']);
                    if (averageQuantity > normalAmountToOrder) {
                        $('#averageQuantityPerDrugCard').removeClass('bg-light text-dark bg-success text-white').addClass('bg-warning text-white');
                    }
                    else {
                        $('#averageQuantityPerDrugCard').removeClass('bg-light text-dark bg-warning text-white').addClass('bg-success text-white');
                    }
                    $('#numTotalQuantityPerDrugCard').text(totalQuantity);

                }
            });
        }

        function refreshCharts() {
            
            if (selectedHospitalTypesJson !== undefined) {
                $('.facilityPrompt').attr('hidden', true);
                prescriptionsTrendChart();
                prescriptionsPerPharmacyChart();
                prescriptionsPerFacilityChart();
                GetSummaryCounts();
            }
            else {
                $('.facilityPrompt').attr('hidden', false);
                toastr.warning('At least one hospital type must be selected');
            }
        }

        function prescriptionsPerFacilityChart() {
            var providerNames = [];
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: payloadJson,
                url: '../api/OutPatientPrescriptions/GetPrescriptionsPerFacility/?HealthFacilityID=' + facilityId
                    + '&ProviderID=' + providerId
                    + '&PharmacyID=' + pharmacyId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate
                    + '&DrugClassId=' + drugClassId
                    + '&DrugId=' + drugId + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                var pharmacyPrescriptions = [];

                for (var i = 0; i < json.length; i++) {
                    providerNames.push(json[i]['HealthFacilityName']);
                    pharmacyPrescriptions.push(json[i]['Total']);

                }
                var xAxisMax = providerNames.length - 1;

                if (providerNames.length > 10) {
                    xAxisMax = 10;
                }
                var chart = new Highcharts.chart('prescriptionsPerProviderChart', {
                    chart: {
                        //type: 'column',
                    },
                    title: { text: '' },
                    subtitle: { text: '' },
                    xAxis: {
                        categories: providerNames,
                        min: 0,
                        max: xAxisMax
                    },
                    scrollbar: {
                        enabled: true,
                        barBackgroundColor: 'gray',
                        barBorderRadius: 7,
                        barBorderWidth: 0,
                        buttonBackgroundColor: 'gray',
                        buttonBorderWidth: 0,
                        buttonArrowColor: 'yellow',
                        buttonBorderRadius: 7,
                        rifleColor: 'yellow',
                        trackBackgroundColor: 'white',
                        trackBorderWidth: 1,
                        trackBorderColor: 'silver',
                        trackBorderRadius: 7
                    },
                    yAxis: [{
                        title: { text: 'Number of Prescriptions' }
                    }
                    ],

                    series: [{
                        name: 'Prescriptions per Facility',
                        data: pharmacyPrescriptions,
                        type: 'column',
                    }],
                    credits: false
                });
            });
        }
    </script>
}