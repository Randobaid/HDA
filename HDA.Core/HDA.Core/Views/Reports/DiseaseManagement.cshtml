@{
    ViewBag.Title = "Disease Management";
}

<div class="col-md-12">
    <br />
    <div class="row">
        <div class="col-md-3">
            <div class="card text-center border border-primary">
                <div class="card-header bg-light text-dark" data-toggle="collapse" data-target="#filtersBody">
                    <i class="fa fa-filter fa-lg" aria-hidden="true"></i><b> Filters</b>
                    <i class="fa fa-spinner fa-pulse fa-lg" hidden id="ajaxProgress"></i>
                </div>
                <div class="card-body text-left" id="filtersBody">
                    <div class="row">

                        <div class="form-group col-md-12">
                            <div class="dropdown">
                                <select id="hospital_types" multiple="multiple">
                                    <option value="1">Hospitals</option>
                                    <option value="2">Comprehensive Centers</option>
                                    <option value="3">Specialized Medical Centers</option>
                                    <option value="4">Peripheral Centers</option>
                                    <option value="5">Primary Centers</option>
                                    <option value="6">Educational Hospitals</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="row">
                                <div class="col-md-10 col-sm-12">
                                    <input type="text" class="form-control" id="TextHospital" placeholder="Select Facility.." disabled="disabled" />
                                </div>
                                <div class="col-md-2 col-sm-12">
                                    <div class="form-check">
                                        <input class="form-check-input " type="checkbox" checked="checked" value="" id="allHospitals">
                                        <label class="form-check-label" for="allHospitals">
                                            All
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <table id="selectedFacilitiesTable" class="table table-sm table-hover">

                                <tbody></tbody>
                            </table>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="diagnosis" class="col-form-label">Diagnosis</label>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <input type="text" class="form-control" id="diagnosisStartCode" placeholder="Start Code.." />
                                </div>
                                <div class="col-md-6">
                                    <input type="text" class="form-control" id="diagnosisEndCode" placeholder="End Code.." disabled="disabled" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="reportrange" class="col-form-label">Reporting Period</label>
                            <div id="reportrange" class="rounded" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                                <i class="fa fa-calendar"></i>&nbsp;
                                <span></span> <i class="fa fa-caret-down"></i>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <button class="btn btn-primary btn-block" onclick="refreshCharts();"><i class="fa fa-refresh"></i>&nbsp;Load Charts</button>
                        </div>
                    </div>
                </div>
            </div>

            <br />
            <div class="card text-center border border-primary">
                <div class="card-header bg-light text-dark">
                    <i class="fa fa-bullseye fa-lg" aria-hidden="true"></i><b> Targets</b>
                </div>

            </div>

            <br />
            <div class="card text-center border border-primary">
                <div class="card-header bg-light text-dark">
                    <i class="fa fa-info-circle fa-lg" aria-hidden="true"></i><b> Additional Information</b>
                </div>

            </div>

        </div>
        <div class="col-md-9">
            <div class="row">
                <div class="col-md-10">

                    <div class="card border border-primary bg-light" id="newCasesByAgeGroupDiv">
                        <div class="card-header bg-primary text-white">
                            New Cases by Age Group <i class="fa fa-spinner fa-pulse fa-lg" hidden="hidden" id="newCasesByAgeGroupProgress"></i>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                
                                <div class="col-md-8">
                                    <div class="prompt"><i class="fa fa-info-circle fa-lg"></i> <i class="text-black-50">Select a Hospital Type to View this Chart</i></div>
                                    <div class="chart" id="newCasesByAgeGroupChart" style="height:300px;" hidden></div>
                                </div>

                                <div class="col-md-4">
                                    <div class="chart" id="totalByAgeGroupChart" style="height:300px;" hidden></div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div class="col-md-2">
                    <div class="card bg-purple text-white text-center">
                        <div class="card-body">
                            <h1 id="numAverageCasesPerMonthCard">-</h1>
                        </div>
                        <div class="card-footer">Average New Cases per Month</div>
                    </div>
                    <hr />
                    <div class="card bg-purple text-white text-center">
                        <div class="card-body">
                            <h1 id="numTotalNewCasesCard">-</h1>
                        </div>
                        <div class="card-footer">Total</div>
                    </div>
                </div>

            </div>
            <hr />
            <div class="row">
                <div class="col-md-10">
                    <div class="card border border-primary bg-light" id="newCasesByGenderDiv">
                        <div class="card-header bg-primary text-white">
                            New Cases by Gender <i class="fa fa-spinner fa-pulse fa-lg" hidden="hidden" id="newCasesByGenderProgress"></i>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="prompt"><i class="fa fa-info-circle fa-lg"></i> <i class="text-black-50">Select a Hospital Type to View this Chart</i></div>
                                    <div class="chart" id="newCasesByGenderChart" style="height:300px;" hidden></div>
                                </div>
                                <br />
                                <div class="col-md-4">
                                    <div class="chart" id="totalByGenderChart" style="height:300px;" hidden></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="row">
                        <div class="col-md-12">

                        </div>
                    </div>
                </div>
            </div>




        </div>
        <div class="col-md-12">


        </div>
    </div>

</div>


@section Scripts {
    <script type="text/javascript">
        var fInput;
        var facilityAws;
        var facilityId = 0;

        var selectedHospitalTypes = [];
        var selectedHospitalTypesJson;

        var diagnosisStartCodeId = 0;
        var diagnosisStartAws;
        var diagnosisStartCode;


        var diagnosisEndCodeId = 0;
        var diagnosisEndCodeAws;
        var diagnosisEndCode;
        var selectedHospitals = [];

        $(function () {
            Highcharts.setOptions({
                chart: {
                    backgroundColor: '#f8f9fa',
                    plotBackgroundColor: '#ffffff',
                    //spacingBottom: 5,
                    //spacingTop: 5,
                    //spacingLeft: 5,
                    //spacingRight: 5,
                }
            });
        });

        $(document).ajaxStart(function () {
            $('#ajaxProgress').removeAttr('hidden');
        });

        $(document).ajaxStop(function () {
            $('#ajaxProgress').attr('hidden', true);
        });

    $(document).ready(function () {
            toastr.options = {
            'positionClass': 'toast-bottom-left',
        }
            $('#hospital_types').multiselect({
                enableHTML: true,
                buttonWidth: '100%',
                includeSelectAllOption: true,
                allSelectedText: 'All Selected',
                buttonClass: 'btn btn-primary btn-block',
                buttonText: function (options, select) {
                    if (options.length === 0) {
                        return '<i class="fa fa-hospital-o fa-lg" aria-hidden="true"></i> Select Hospital Type';
                    }
                    else if (options.length > 3) {
                        return options.length + ' selected';
                    }
                    else {
                        var labels = [];
                        options.each(function () {
                            if ($(this).attr('label') !== undefined) {
                                labels.push($(this).attr('label'));
                            }
                            else {
                                labels.push($(this).html());
                            }
                        });
                        return labels.join(', ') + '';
                    }
                },
                onDropdownHidden: function (event) {
                    selectedHospitalTypes = [];
                    $.each($('#hospital_types option:selected'), function () {
                        var a = new Object();
                        a.HealthFacilityTypeId = $(this).val();
                        selectedHospitalTypes.push(a);
                    });

                    selectedHospitalTypesJson = JSON.stringify(selectedHospitalTypes);
                    GetFacilityList(fInput, facilityAws, selectedHospitalTypesJson);
                }
            });

            fInput = document.getElementById("TextHospital");
            facilityAws = new Awesomplete(fInput, { minChars: 2 });
            GetStartCodes();
        });

        $("#allHospitals").change(function () {
            if (this.checked) {
                $('#TextHospital').attr('disabled', true);
                $('#TextHospital').val('');
                facilityId = 0;
                selectedHospitals = [];
                $('#selectedFacilitiesTable').empty();
                $('#selectedFacilitiesTable').append('<tbody></tbody>');
            }
            else {
                $('#TextHospital').removeAttr('disabled');
            }
        });

        function GetFacilityList(fInput, aws1, selectedFacilityTypes) {
            fInput.addEventListener('awesomplete-selectcomplete', SelectFacility);
            $.ajax({
                url: '../api/HealthFacilities/PostHealthFacilitiesByType',
                type: 'POST',
                data: selectedFacilityTypes,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var serverData = data;
                    var hfList = [];
                    for (var i = 0; i < serverData.length; i++) {
                        hfList.push({ label: serverData[i]['HealthFacilityName'], value: serverData[i]['ID'] + '~' + serverData[i]['HealthFacilityName'] });
                    }
                    aws1.list = hfList;
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }

        function GetStartCodes() {
            var diagnosisStartCodeTextBox = document.getElementById("diagnosisStartCode");
            diagnosisStartAws = new Awesomplete(diagnosisStartCodeTextBox, { minChars: 2 });
            diagnosisStartCodeTextBox.addEventListener('awesomplete-selectcomplete', SelectStartCode);

            $.ajax({
                url: '../api/DiseaseManagement/GetDiagnosisCodes',
                type: 'POST',
                data: '{"DiagnosisCodeID":"0","DiagnosisCode":""}',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var serverData = data;
                    var codeList = [];
                    for (var i = 0; i < serverData.length; i++) {
                        codeList.push({ label: serverData[i]['Code'] + '-' + serverData[i]['CodeName'], value: serverData[i]['DiagnosisCodeID'] + '~' + serverData[i]['Code'] + '~' + serverData[i]['CodeName'] });
                    }
                    diagnosisStartAws.list = codeList;
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }

        function GetEndCodes(selectedStartCodeId, selectedStartCode) {
            var diagnosisEndCodeTextBox = document.getElementById("diagnosisEndCode");
            diagnosisEndCodeAws = new Awesomplete(diagnosisEndCodeTextBox, { minChars: 2 });
            diagnosisEndCodeTextBox.addEventListener('awesomplete-selectcomplete', SelectEndCode);

            $.ajax({
                url: '../api/DiseaseManagement/GetDiagnosisCodes',
                type: 'POST',
                data: '{"DiagnosisCodeID":"' + selectedStartCodeId + '","DiagnosisCode":"' + selectedStartCode + '"}',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var serverData = data;
                    var codeList = [];
                    for (var i = 0; i < serverData.length; i++) {
                        codeList.push({ label: serverData[i]['Code'] + '-' + serverData[i]['CodeName'], value: serverData[i]['DiagnosisCodeID'] + '~' + serverData[i]['Code'] + '~' + serverData[i]['CodeName'] });
                    }
                    diagnosisEndCodeAws.list = codeList;
                },
                error: function (data) {
                    console.log(data);
                }
            });

            $('#diagnosisEndCode').attr('disabled', false);
            $('#diagnosisEndCode').val(selectedStartCode);
            $('#diagnosisEndCode').value = selectedStartCode;
            diagnosisEndCodeId = selectedStartCodeId;

        }

        function SelectStartCode() {
            var result = this.value.split("~");
            diagnosisStartCode = result[1];
            this.value = diagnosisStartCode;
            diagnosisStartCodeId = result[0];
            GetEndCodes(diagnosisStartCodeId, diagnosisStartCode);
        }

        function SelectEndCode() {
            var result = this.value.split("~");
            diagnosisEndCode = result[1];
            this.value = diagnosisEndCode
            diagnosisEndCodeId = result[0];
        }

        $(function () {
            var start = moment().startOf('year');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                startDate = start.format('YYYY-MM-DD');
                endDate = end.format('YYYY-MM-DD');
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                alwaysShowCalendars: true,
                ranges: {
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    'Year to Date': [moment().startOf('year'), moment()],
                    'Last Year': [moment().startOf('year').subtract(1, 'year'), moment().endOf('year').subtract(1, 'year')]
                }
            }, cb);
            cb(start, end);
        });

        function SelectFacility() {
            var result = this.value.split("~");
            var healthFacilityName = result[1];
            var healthFacilityId = result[0];
            selectedHospitals.push(healthFacilityId);
            this.value = "";

            $('#selectedFacilitiesTable > tbody:last-child').append
                ('<tr><td class="font-weight-bold">' + healthFacilityName + '</td><td><a href="#" onclick="updateTable(this,' + healthFacilityId + ');"><i class="fa fa-trash" ></i></a></td></tr>');

        }
        function updateTable(row, removeId) {
            $(row).parent().parent().remove();
            selectedHospitals.splice($.inArray(removeId, selectedHospitals), 1);
            var t = document.getElementById("selectedFacilitiesTable");
            if (t.rows.length == 0) {
                $("#allHospitals").prop('checked', true);
                $("#allHospitals").change();
            }
        }

        function refreshCharts() {
            if (diagnosisStartCodeId > 0 && diagnosisEndCodeId > 0 && selectedHospitalTypes.length > 0) {
                $('.prompt').attr('hidden', true);
                $('.chart').attr('hidden', false);
                newCaseTrendsByAgeGroup();
                newCaseTrendsByGender();
                totalByAgeGroup();
                totalsByGender();
                cardSummaries();
            }
            else {
                toastr.warning('At least one hospital type and one diagnosis code must be selected');
            }

        }

        function newCaseTrendsByAgeGroup() {
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: payloadJson,
                url: '../api/DiseaseManagement/GetNewCasesByAgeGroup/?HealthFacilityID=' + facilityId
                    + '&StartCodeID=' + diagnosisStartCodeId
                    + '&EndCodeID=' + diagnosisEndCodeId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                var series01 = [];
                var series25 = [];
                var series614 = [];
                var series1535 = [];
                var series3660 = [];
                var series60Plus = [];
                for (var i = 0; i < json.length; i++) {
                    if (json[i]['AgeGroup'] == '0-1') {
                        series01.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['Total']]);
                    }
                    if (json[i]['AgeGroup'] == '2-5') {
                        series25.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['Total']]);
                    }
                    if (json[i]['AgeGroup'] == '6-14') {
                        series614.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['Total']]);
                    }
                    if (json[i]['AgeGroup'] == '15-35') {
                        series1535.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['Total']]);
                    }
                    if (json[i]['AgeGroup'] == '36-60') {
                        series3660.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['Total']]);
                    }
                    if (json[i]['AgeGroup'] == '60+') {
                        series60Plus.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['Total']]);
                    }
                }
                var chart = new Highcharts.chart('newCasesByAgeGroupChart', {
                    chart: {
                        type: 'line'
                    },
                    title: { text: '' },

                    subtitle: { text: '' },
                    credits: false,
                    xAxis: { type: 'datetime' },
                    series: [
                        {
                            name: '0-1 Years',
                            data: series01,
                        },
                        {
                            name: '2-5 Years',
                            data: series25,
                        },
                        {
                            name: '6-14 Years',
                            data: series614,
                        },

                        {
                            name: '15-35 Years',
                            data: series1535,
                        },
                        {
                            name: '36-60 Years',
                            data: series3660,
                        }
                        ,
                        {
                            name: '60+ Years',
                            data: series60Plus,
                        }

                    ],
                    yAxis: {
                        title: {
                            text: 'Number of Patients'
                        }
                    }
                });
            });

        }

        function newCaseTrendsByGender() {
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);


            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: payloadJson,
                url: '../api/DiseaseManagement/GetNewCasesByGender/?HealthFacilityID=' + facilityId
                    + '&StartCodeID=' + diagnosisStartCodeId
                    + '&EndCodeID=' + diagnosisEndCodeId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                var seriesFemale = [];
                var seriesMale = [];

                for (var i = 0; i < json.length; i++) {
                    seriesFemale.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['FemaleTotal']]);
                    seriesMale.push([Date.UTC(json[i]['Year'], json[i]['Month'] - 1), json[i]['MaleTotal']]);
                }
                var chart = new Highcharts.chart('newCasesByGenderChart', {
                    chart: {
                        type: 'column'
                    },
                    title: { text: '' },
                    subtitle: { text: '' },
                    plotOptions: { series: { stacking: 'normal' } },
                    credits: false,
                    xAxis: { type: 'datetime' },
                    series: [
                        {
                            name: 'Female',
                            data: seriesFemale,
                        },
                        {
                            name: 'Male',
                            data: seriesMale,
                        }
                    ],
                    yAxis: {
                        title: {
                            text: 'Number of Patients'
                        }
                    }
                });
            });

        }

        function totalByAgeGroup() {
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: payloadJson,
                url: '../api/DiseaseManagement/GetTotalsByAgeGroup/?HealthFacilityID=' + facilityId
                    + '&StartCodeID=' + diagnosisStartCodeId
                    + '&EndCodeID=' + diagnosisEndCodeId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                console.log(json);
                var chart = new Highcharts.chart('totalByAgeGroupChart', {
                    chart: {
                        type: 'pie',
                        plotBackgroundColor: '#f8f9fa',
                    },
                    title: { text: '' },
                    subtitle: { text: '' },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                distance: 10
                            },
                            //showInLegend: true,
                        }
                    },
                    credits: false,
                    series:
                        [{
                            name: 'Age Groups',
                            colorByPoint: true,
                            
                            data: [
                                {
                                    name: '0-1 Years',
                                    y: json[0]['Total01'],
                                },
                                {
                                    name: '2-5 Years',
                                    y: json[0]['Total25'],
                                },
                                {
                                    name: '6-14 Years',
                                    y: json[0]['Total614'],
                                },
                                {
                                    name: '15-35 Years',
                                    y: json[0]['Total1535'],
                                },
                                {
                                    name: '36-60 Years',
                                    y: json[0]['Total3660'],
                                }
                                ,
                                {
                                    name: '60+ Years',
                                    y: json[0]['Total60Plus'],
                                }
                            ]
                        }],

                });
            });

        }

        function totalsByGender() {
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: payloadJson,
                url: '../api/DiseaseManagement/GetTotalsByGender/?HealthFacilityID=' + facilityId
                    + '&StartCodeID=' + diagnosisStartCodeId
                    + '&EndCodeID=' + diagnosisEndCodeId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                console.log(json);
                var chart = new Highcharts.chart('totalByGenderChart', {
                    chart: {
                        type: 'pie',
                        plotBackgroundColor: '#f8f9fa',
                    },
                    title: { text: '' },
                    subtitle: { text: '' },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>:{point.percentage:.1f}%',
                                distance: 10,
                                //color:'#ffffff'
                            },
                            //showInLegend: true,
                        }
                    },
                    credits: false,
                    series:
                        [{
                            name: 'Gender',
                            colorByPoint: true,
                            data: [
                                {
                                    name: 'Female',
                                    y: json[0]['FemaleTotal'],
                                },
                                {
                                    name: 'Male',
                                    y: json[0]['MaleTotal'],
                                }
                            ]
                        }],

                });
            });

        }

        function cardSummaries() {
            var payload = [];
            var a = new Object();
            a.HealthFacilities = selectedHospitals;
            a.HealthFacilityTypes = selectedHospitalTypes;
            payload.push(a);
            payloadJson = JSON.stringify(payload);

            $.ajax({
                type: 'POST',
                data: payloadJson,
                dataType: 'json',
                url: '../api/DiseaseManagement/GetSummaries/?HealthFacilityID=' + facilityId
                    + '&StartCodeID=' + diagnosisStartCodeId
                    + '&EndCodeID=' + diagnosisEndCodeId
                    + '&FromDate=' + startDate
                    + '&ToDate=' + endDate + '',
                contentType: "application/json; charset=utf-8"
            }).done(function (json) {
                $('#numAverageCasesPerMonthCard').text(json[0]['AverageNewCasesPerMonth']);
                $('#numTotalNewCasesCard').text(json[0]['TotalNewCases']);
            });
        }
    </script>
}